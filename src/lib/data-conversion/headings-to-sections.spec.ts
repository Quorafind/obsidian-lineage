import { describe, expect, test } from 'vitest';
import { headingsToSections } from 'src/lib/data-conversion/headings-to-sections';

describe('headingsToSections', () => {
    test('should annotate headings based on level', () => {
        const input = `
# 1
...
## 1.1
...
...
### 1.1.1
...
#### 1.1.1.1
...
...
...
##### 1.1.1.1.1
...
...
## 1.2
...
...
...
...
...
...
### 1.2.1
...
...
#### 1.2.1.1
...
...
...
...
### 1.2.2
...
...
## 1.3
...
...
...
...
# 2
...
...
## 2.1
### 2.1.1
...
...
#### 2.1.1.1
...
...
### 2.1.2
...
...
## 2.2
...
...
### 2.2.1
...
...
#### 2.2.1.1
...
...
##### 2.2.1.1.1
...
...
# 3
...
...
## 3.1
...
...
### 3.1.1
...
...
#### 3.1.1.1
...
...
### 3.1.2
...
...
## 3.2
...
...
### 3.2.1
...
...
#### 3.2.1.1
...
...
### 3.2.2
...
...
## 3.3
...
...
`;
        const output = `
<!--section: 1-->
# 1
...

<!--section: 1.1-->
## 1.1
...
...

<!--section: 1.1.1-->
### 1.1.1
...

<!--section: 1.1.1.1-->
#### 1.1.1.1
...
...
...

<!--section: 1.1.1.1.1-->
##### 1.1.1.1.1
...
...

<!--section: 1.2-->
## 1.2
...
...
...
...
...
...

<!--section: 1.2.1-->
### 1.2.1
...
...

<!--section: 1.2.1.1-->
#### 1.2.1.1
...
...
...
...

<!--section: 1.2.2-->
### 1.2.2
...
...

<!--section: 1.3-->
## 1.3
...
...
...
...

<!--section: 2-->
# 2
...
...

<!--section: 2.1-->
## 2.1

<!--section: 2.1.1-->
### 2.1.1
...
...

<!--section: 2.1.1.1-->
#### 2.1.1.1
...
...

<!--section: 2.1.2-->
### 2.1.2
...
...

<!--section: 2.2-->
## 2.2
...
...

<!--section: 2.2.1-->
### 2.2.1
...
...

<!--section: 2.2.1.1-->
#### 2.2.1.1
...
...

<!--section: 2.2.1.1.1-->
##### 2.2.1.1.1
...
...

<!--section: 3-->
# 3
...
...

<!--section: 3.1-->
## 3.1
...
...

<!--section: 3.1.1-->
### 3.1.1
...
...

<!--section: 3.1.1.1-->
#### 3.1.1.1
...
...

<!--section: 3.1.2-->
### 3.1.2
...
...

<!--section: 3.2-->
## 3.2
...
...

<!--section: 3.2.1-->
### 3.2.1
...
...

<!--section: 3.2.1.1-->
#### 3.2.1.1
...
...

<!--section: 3.2.2-->
### 3.2.2
...
...

<!--section: 3.3-->
## 3.3
...
...
`;
        expect(headingsToSections(input)).toEqual(output);
    });
    test('should not discard text before the first heading', () => {
        const input = `
...
...

...        
# 1
...
## 1.1
...
...
### 1.1.1
...
#### 1.1.1.1
...
...
...
##### 1.1.1.1.1
...
...
## 1.2
...
# 2
...
`;

        const output = `
<!--section: 1-->
...
...

...        

<!--section: 2-->
# 1
...

<!--section: 2.1-->
## 1.1
...
...

<!--section: 2.1.1-->
### 1.1.1
...

<!--section: 2.1.1.1-->
#### 1.1.1.1
...
...
...

<!--section: 2.1.1.1.1-->
##### 1.1.1.1.1
...
...

<!--section: 2.2-->
## 1.2
...

<!--section: 3-->
# 2
...
`;
        expect(headingsToSections(input)).toEqual(output);
    });

    test('should reject text that has a section annotation', () => {
        const input = `
# 1
...
## 1.1
...
...
<!--section: 1-->
### 1.1.1`;
        expect(() => headingsToSections(input)).toThrow('input has a section');
    });

    test('...', () => {
        const input = `# 1
..
..
..

## 1.1
..
..
..

## 1.2
..
..

### 1.2.1
..
..

## 1.3
..
..

### 1.3.1
..
..

### 1.3.2
..
..

#### 1.3.2.1
..
..

#### 1.3.2.2
..
..

##### 1.3.2.2.1
..
..

##### 1.3.2.2.2
..
..

# 2
..
..
..

## 2.1
..
..

## 2.2
..
..

### 2.2.1
..
..

### 2.2.2
..
..

#### 2.2.2.1
..
..

#### 2.2.2.2
..
..

##### 2.2.2.2.1
..
..

##### 2.2.2.2.2
..
..

# 3
..
..
..

## 3.1
..
..

## 3.2
..
..

### 3.2.1
..
..

### 3.2.2
..
..

#### 3.2.2.1
..
..

#### 3.2.2.2
..
..

##### 3.2.2.2.1
..
..

##### 3.2.2.2.2
..
..

# 4
..
..
..

## 4.1
..
..

## 4.2
..
..

### 4.2.1
..
..

### 4.2.2
..
..

#### 4.2.2.1
..
..

#### 4.2.2.2
..
..

##### 4.2.2.2.1
..
..

##### 4.2.2.2.2
..
..

# 5
..
..
..

## 5.1
..
..

## 5.2
..
..

### 5.2.1
..
..

### 5.2.2
..
..

#### 5.2.2.1
..
..

#### 5.2.2.2
..
..

##### 5.2.2.2.1
..
..

##### 5.2.2.2.2
..
..`;

        const output = `
<!--section: 1-->
# 1
..
..
..


<!--section: 1.1-->
## 1.1
..
..
..


<!--section: 1.2-->
## 1.2
..
..


<!--section: 1.2.1-->
### 1.2.1
..
..


<!--section: 1.3-->
## 1.3
..
..


<!--section: 1.3.1-->
### 1.3.1
..
..


<!--section: 1.3.2-->
### 1.3.2
..
..


<!--section: 1.3.2.1-->
#### 1.3.2.1
..
..


<!--section: 1.3.2.2-->
#### 1.3.2.2
..
..


<!--section: 1.3.2.2.1-->
##### 1.3.2.2.1
..
..


<!--section: 1.3.2.2.2-->
##### 1.3.2.2.2
..
..


<!--section: 2-->
# 2
..
..
..


<!--section: 2.1-->
## 2.1
..
..


<!--section: 2.2-->
## 2.2
..
..


<!--section: 2.2.1-->
### 2.2.1
..
..


<!--section: 2.2.2-->
### 2.2.2
..
..


<!--section: 2.2.2.1-->
#### 2.2.2.1
..
..


<!--section: 2.2.2.2-->
#### 2.2.2.2
..
..


<!--section: 2.2.2.2.1-->
##### 2.2.2.2.1
..
..


<!--section: 2.2.2.2.2-->
##### 2.2.2.2.2
..
..


<!--section: 3-->
# 3
..
..
..


<!--section: 3.1-->
## 3.1
..
..


<!--section: 3.2-->
## 3.2
..
..


<!--section: 3.2.1-->
### 3.2.1
..
..


<!--section: 3.2.2-->
### 3.2.2
..
..


<!--section: 3.2.2.1-->
#### 3.2.2.1
..
..


<!--section: 3.2.2.2-->
#### 3.2.2.2
..
..


<!--section: 3.2.2.2.1-->
##### 3.2.2.2.1
..
..


<!--section: 3.2.2.2.2-->
##### 3.2.2.2.2
..
..


<!--section: 4-->
# 4
..
..
..


<!--section: 4.1-->
## 4.1
..
..


<!--section: 4.2-->
## 4.2
..
..


<!--section: 4.2.1-->
### 4.2.1
..
..


<!--section: 4.2.2-->
### 4.2.2
..
..


<!--section: 4.2.2.1-->
#### 4.2.2.1
..
..


<!--section: 4.2.2.2-->
#### 4.2.2.2
..
..


<!--section: 4.2.2.2.1-->
##### 4.2.2.2.1
..
..


<!--section: 4.2.2.2.2-->
##### 4.2.2.2.2
..
..


<!--section: 5-->
# 5
..
..
..


<!--section: 5.1-->
## 5.1
..
..


<!--section: 5.2-->
## 5.2
..
..


<!--section: 5.2.1-->
### 5.2.1
..
..


<!--section: 5.2.2-->
### 5.2.2
..
..


<!--section: 5.2.2.1-->
#### 5.2.2.1
..
..


<!--section: 5.2.2.2-->
#### 5.2.2.2
..
..


<!--section: 5.2.2.2.1-->
##### 5.2.2.2.1
..
..


<!--section: 5.2.2.2.2-->
##### 5.2.2.2.2
..
..`;
        expect(headingsToSections(input)).toEqual(output);
    });
});
